# Known Limits
# 1. Anchors are not supported in GHA
# https://github.community/t/support-for-yaml-anchors/16128/90
# 2. today most cloud-based CI services are still lacking hardware acceleration support from the host VM,
# which is the no.1 blocker for running tests on modern Android Emulators (especially on recent API levels) on CI.

jobs:
- job: BUILD_NNAPI_EP
  pool:
    vmImage: 'macOS-11'
  timeoutInMinutes: 90
  workspace:
    clean: all
  steps:
    - script: |
        set -ex
        sudo xcode-select --switch /Applications/Xcode_12.4.app/Contents/Developer
        clang --version
        gcc --version
        gcov --version
        system_profiler SPSoftwareDataType SPHardwareDataType
      displayName: 'Mac Agent Info'

    - task: UsePythonVersion@0
      displayName: Use Python $(pythonVersion)
      inputs:
        versionSpec: $(pythonVersion)

    - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
      displayName: Setup gradle wrapper to use gradle 6.8.3

    - script: brew install coreutils ninja
      displayName: Install coreutils and ninja

    - task: AzureKeyVault@2
      inputs:
        connectedServiceName: 'AIInfraBuild'
        KeyVaultName: 'zhanyi-cache-test'
        SecretsFilter: 'zhanyi-conn-string'
        RunAsPreJob: false

    # We build the host protoc to <ORT_ROOT>/protobuf_install
    - script: |
        /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/apple/build_host_protoc.sh \
          $(Build.SourcesDirectory) \
          $(Build.BinariesDirectory)/protobuf \
          $(Build.SourcesDirectory)/protobuf_install
      displayName: Build Host Protoc

    - script: |
        python3 tools/python/run_android_emulator.py \
        --android-sdk-root ${ANDROID_SDK_ROOT} \
        --create-avd --system-image "system-images;android-29;google_apis;x86_64" \
        --start --emulator-extra-args="-partition-size 4096" \
        --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
      displayName: Start Android emulator

    # Start switching to jdk 11 after the Android Emulator is started since Android SDK manager requires java 8
    - task: JavaToolInstaller@0
      displayName: Use jdk 11
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - script: |
        set -ex
        brew install sccache
        source '$(Build.SourcesDirectory)/tools/ci_build/github/apple/set_sccache.sh'
        if which sccache > /dev/null; then
          sccache --show-stats
          sccache --stop-server
        fi

        python3 tools/ci_build/build.py \
          --android \
          --build_dir build_nnapi \
          --android_sdk_path $ANDROID_HOME \
          --android_ndk_path $ANDROID_NDK_HOME \
          --android_abi=x86_64 \
          --android_api=29 \
          --skip_submodule_sync \
          --parallel \
          --use_nnapi \
          --cmake_generator=Ninja \
          --path_to_protoc_exe $(Build.SourcesDirectory)/protobuf_install/bin/protoc \
          --build_java \
          --code_coverage

        if which sccache > /dev/null; then
          sccache --show-stats
          sccache --stop-server
        fi
      displayName: NNAPI EP, Build Test, CodeCoverage on Android Emulator
      env:
        SCCACHE_AZURE_CONNECTION_STRING: '$(zhanyi-conn-string)'
        SCCACHE_AZURE_BLOB_CONTAINER: 'zhanyi-sccache'

    - script: |
        pwd
        echo $(Build.SourcesDirectory)
        find . $(Build.SourcesDirectory)
      displayName: Check Test Output
    - script: |
        python3 -m pip install gcovr && \
        python3 tools/ci_build/coverage.py \
          --build_dir build_nnapi \
          --android_sdk_path $ANDROID_HOME \
      displayName: Retrieve runtime code coverage files from the emulator and analyze
    - script: cat '$(Build.SourcesDirectory)/build_nnapi/Debug/coverage_rpt.txt'
      displayName: Print coverage report

    - task: PublishPipelineArtifact@0
      displayName: 'Publish code coverage report'
      inputs:
        artifactName: "coverage_rpt.txt"
        targetPath: '$(Build.SourcesDirectory)/build_nnapi/Debug/coverage_rpt.txt'
        publishLocation: 'pipeline'

    - script: |
        python3 tools/python/run_android_emulator.py \
          --android-sdk-root ${ANDROID_SDK_ROOT} \
          --stop \
          --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
      displayName: Stop Android emulator
      condition: always()

    - template: templates/clean-agent-build-directory-step.yml
